metadata:
    language: v2-beta
    name: "Nginx off by slash"
    description: "Path traversal via Nginx Misconfiguration | Nginx off-by-slash"
    author: "j3ssie"
    tags: "nginx", "path-traversal", "off-by-slash", "injection"

define:
    references = `
    ## References:
    - https://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf
    - https://github.com/bayotop/off-by-slash
    - https://github.com/yandex/gixy/blob/master/docs/en/plugins/aliastraversal.md
    - https://labs.hakaioffsec.com/nginx-alias-traversal/
    `
    issueRemediation = `Nginx off by slash. Manual Review is recommended.
    {references}`
    issueDetail = `Nginx off by slash`

run for each:
    injections = "..", "..;", "."
    files = "js", "static", "img"

given path then
    # append the injection to the first part of the path
    # e.g: /static/main.js -> this will send the request to /static{injections}/main.js
    send request called check1:
        method: "GET"
        replacing path: {regex_replace({base.request.url.path}, "\.*([^\/]+)\/", `$1{injections}/`)}

    send request called check2:
        method: "GET"
        replacing path: {regex_replace({base.request.url.path}, "\.*([^\/]+)\/", `$1{injections}/{files}`)}


    # if the response of '/static/main.js' and  '/static{injections}/main.js' is the same then we have an issue
    if {check1.response.status_code} is "200" then
        if {check1.response.body} is {base.response.body} then
            report issue:
                severity: high
                confidence: tentative
                detail: `{issueDetail}`
                remediation: `{issueRemediation}`
        end if
    end if
